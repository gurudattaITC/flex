<project default="test">
    <!-- input directories and files -->
    <property name="app.src.dir" value="sources" />
    <property name="tests.src.dir" value="tests" />
    <property name="lib.dir" value="lib" />
    <property name="conf.dir" value="conf" />
    <!-- output directories and files -->
    <property name="build.dir" value="build" />
   
    <property name="app.classes.dir" value="${build.dir}/application/classes" />
	<property name="app.lib.dir" value="${build.dir}/lib" />

    <property name="app.jar.dir" value="${build.dir}/application/jar" />
    <property name="app.jar.name" value="flexapp.jar" />
    <property name="app.jar.pathname" value="${app.jar.dir}/${app.jar.name}" />
    <property name="app.jar.main-class" value="com.cust.product.UpdateProduct" />
    <property name="tests.classes.dir" value="${build.dir}/tests/classes" />
    <property name="conf.xml.dir" value="${build.dir}/conf" />	
    <property name="install.dir" value="${user.home}/bin" />

    <presetdef name="project.javac">
        <javac debug="on" includeantruntime="false" />
    </presetdef>

    <target name="build">
           <mkdir dir="${app.classes.dir}" />
		 
        <mkdir dir="${app.jar.dir}" />
        <mkdir dir="${tests.classes.dir}" />
	<mkdir dir="${conf.xml.dir}" />
	<copy todir="${conf.xml.dir}">
 	 <fileset dir="${conf.dir}">
  	  <include name="**/*.*"/>
   	 <include name="**/*.xsl"/>
   	 <include name="**/*.properties"/>
  	</fileset>
	 </copy>
	  <mkdir dir="${app.lib.dir}" />
	<copy todir="${app.lib.dir}">
 	 <fileset dir="${lib.dir}">
  	  <include name="**/*.*"/>
   	
  	</fileset>
	 </copy>
	
        <project.javac srcdir="${app.src.dir}" destdir="${app.classes.dir}" />
        <jar destfile="${app.jar.pathname}" basedir="${app.classes.dir}">
		<fileset dir="${app.src.dir}" includes="**/*.java"/>
		<fileset dir="${app.src.dir}" includes="**/*.jsp"/>
            <manifest>
                <attribute name="Main-Class" value="${app.jar.main-class}" />
            </manifest>
        </jar>

        <project.javac srcdir="${tests.src.dir}" destdir="${tests.classes.dir}">
            <classpath>
                <fileset dir="${lib.dir}" includes="**/*.jar"/>
			
                <path location="${app.jar.pathname}"/>
            </classpath>
        </project.javac>

    </target>

    <target name="clean">
        <delete dir="${build.dir}" />
    </target>

    <target name="test" depends="build">
        <junit printsummary="on" haltonfailure="yes" fork="true">
            <classpath>
                <fileset dir="${lib.dir}" includes="**/*.jar"/>
                <path location="${app.jar.pathname}"/>
                <pathelement location="${tests.classes.dir}"/>
            </classpath>
            <formatter type="brief" usefile="false" />
            <batchtest>
                <fileset dir="${tests.src.dir}" includes="**/*Test.java" />
            </batchtest>
        </junit>
    </target>

    <target name="install" depends="build">
        <copy file="${app.jar.pathname}" todir="${install.dir}" />

    </target>
<target name="package" depends="build">
    <tstamp>
        <format property="ts" pattern="yyyyMMddhhmmss"></format>
    </tstamp>

    <property name="zipfolder" value="flexplm-${ts}"></property>

    <mkdir dir="${zipfolder}"></mkdir>

    <copy todir="${zipfolder}">
        <fileset dir="${basedir}" includes="build/**"></fileset>
    </copy>

    <zip destfile="${zipfolder}.zip">
        <zipfileset dir="${basedir}">
            <include name="${zipfolder}/**/**"></include>
        </zipfileset>
    </zip>

    <delete dir="${zipfolder}"></delete>
</target>

</project>